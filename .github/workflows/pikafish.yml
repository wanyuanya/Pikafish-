name: Pikafish

on:
  push:
    branches:
      - master

jobs:
  Pikafish-x86-64:
    name: ${{ matrix.config.name }}${{ matrix.arch }}
    runs-on: ${{ matrix.config.os }}
    env:
      ARCH: x86-64${{ matrix.arch }}
      COMP: clang
      EXE: pikafish${{ matrix.arch }}${{ matrix.config.ext }}
    strategy:
      matrix:
        config:
          - name: Linux
            os: ubuntu-22.04 
            shell: bash
          - name: Windows
            os: windows-latest
            shell: msys2 {0}
            ext: .exe
        arch: ["-avx512icl", "-vnni512", "-avx512bw", "-avx512", "-avxvnni", "-bmi2", "-avx2", "-sse41-popcnt"]
    defaults:
      run:
        working-directory: src
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup msys and install required packages
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: clang64
          install: mingw-w64-clang-x86_64-clang make git

      - name: Compile ${{ matrix.arch }} build
        run: |
          make -j build EXE=$EXE
          make strip EXE=$EXE
          cp $EXE ../

      # Artifacts automatically get zipped.
      # To avoid double-zipping, we use the unzipped directory
      - uses: actions/upload-artifact@v4
        with:	
          name: Pikafish-${{ matrix.config.name }}${{ matrix.arch }}
          path: ${{ env.EXE }}

  Pikafish-MacOS:
    name: MacOS-apple-silicon
    runs-on: macos-latest
    env:
      ARCH: apple-silicon
      COMP: clang
      EXE: pikafish-apple-silicon
    defaults:
      run:
        working-directory: src
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Compile apple-silicon build
        run: |
          make -j build EXE=$EXE
          make strip EXE=$EXE
          cp $EXE ../

      # Artifacts automatically get zipped.
      # To avoid double-zipping, we use the unzipped directory
      - uses: actions/upload-artifact@v4
        with:
          name: Pikafish-MacOS-apple-silicon
          path: ${{ env.EXE }}

  Pikafish-Android:
    name: Android-${{ matrix.arch }}
    runs-on: ubuntu-latest
    env:
      ARCH: ${{ matrix.arch }}
      COMP: ndk
      EXE: pikafish-${{ matrix.arch }}
      LDFLAGS: "-static -Wno-unused-command-line-argument"
    strategy:
      matrix:
        arch: ["armv8-dotprod", "armv8"]
    defaults:
      run:
        working-directory: src

    steps:
      - uses: actions/checkout@v4

      - name: Install NDK
        run: |
          NDKV="27.2.12479018"
          ANDROID_ROOT=/usr/local/lib/android
          ANDROID_SDK_ROOT=$ANDROID_ROOT/sdk
          SDKMANAGER=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager
          echo "y" | $SDKMANAGER "ndk;$NDKV"
          ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/$NDKV
          ANDROID_NDK_BIN=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin
          echo "ANDROID_NDK_BIN=$ANDROID_NDK_BIN" >> $GITHUB_ENV

      - name: Compile ${{ matrix.arch }} build
        run: |
          export PATH=${{ env.ANDROID_NDK_BIN }}:$PATH
          make -j build EXE=$EXE
          make strip EXE=$EXE
          cp $EXE ../

      # Artifacts automatically get zipped.
      # To avoid double-zipping, we use the unzipped directory
      - uses: actions/upload-artifact@v4
        with:	
          name: Pikafish-Android-${{ matrix.arch }}
          path: ${{ env.EXE }}

  Pikafish:
    name: Pikafish
    runs-on: ubuntu-latest
    needs: [Pikafish-x86-64, Pikafish-MacOS, Pikafish-Android]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
      
      - name: Put binaries into OS-specific directories
        run: |
          mkdir Windows
          mv Pikafish-Windows*/* Windows
          mkdir Linux
          mv Pikafish-Linux*/* Linux
          mkdir MacOS
          mv Pikafish-MacOS*/* MacOS
          mkdir Android
          mv Pikafish-Android*/* Android

      - name: Download wiki
        run: |
          git clone https://github.com/official-pikafish/Pikafish.wiki.git Wiki
          cd Wiki
          rm -rf .git

      # Artifacts automatically get zipped.
      # To avoid double-zipping, we use the unzipped directory
      - uses: actions/upload-artifact@v4
        with:
          name: Pikafish
          path: |
            Windows
            Linux
            MacOS
            Android
            Wiki
            AUTHORS
            CONTRIBUTING.md
            Copying.txt
            README.md
            Top CPU Contributors.txt